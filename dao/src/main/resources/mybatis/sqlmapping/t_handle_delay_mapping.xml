<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nilo.dms.dao.HandleDelayDao">

    <!-- 实体bean与数据字段对应关系 -->
    <resultMap id="delayDO" type="com.nilo.dms.dto.handle.HandleDelay">
        <result property="id" column="id" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="merchantId" column="merchant_Id" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="orderNo" column="order_no" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="reason" column="reason" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="reasonId" column="reason_id" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="handleBy" column="handle_by" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="handleName" column="handle_name" javaType="java.lang.String"
                jdbcType="VARCHAR"/>

        <result property="remark" column="remark" javaType="java.lang.String"
                jdbcType="VARCHAR"/>


        <result property="status" column="status" javaType="java.lang.Integer"
                jdbcType="INTEGER"/>
        <result property="createdTime" column="created_time" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="updatedTime" column="updated_time" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="version" column="version" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id ,merchant_id,order_no,reason,reason_id,handle_by,handle_name,remark,status,created_time , updated_time ,version
    </sql>

    <!-- 插入语句 -->
    <insert id="insert" parameterType="com.nilo.dms.dto.handle.HandleDelay" statementType="PREPARED"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO t_handle_delay
        ( merchant_id,order_no,reason,reason_id,handle_by,handle_name,remark,status,created_time , updated_time ,version)
        VALUES
        (#{merchantId},#{orderNo},#{reason},#{reasonId},#{handleBy},#{handleName},#{remark},#{status}, UNIX_TIMESTAMP(NOW()),UNIX_TIMESTAMP(NOW()),UUID())
    </insert>
    <!-- 动态更新语句 -->
    <update id="update" parameterType="com.nilo.dms.dto.handle.HandleDelay" statementType="PREPARED">
        update t_handle_delay
        <trim prefix="set" suffixOverrides="," suffix="where merchant_id=#{merchantId} and order_no = #{orderNo} and status =1 ">
            <if test="status != null">
                status = #{status},
            </if>
            updated_time=UNIX_TIMESTAMP(NOW()),version=UUID()
        </trim>
    </update>

    <select id="findByOrderNo" resultMap="delayDO" statementType="PREPARED">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_handle_delay where
        merchant_id = #{merchantId} and order_no = #{orderNo}
    </select>

    <select id="queryBy" resultMap="delayDO" statementType="PREPARED">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_handle_delay where
        merchant_id = #{merchantId} and status = 1
        <if test="orderNo != null and orderNo != '' ">
            and order_no like CONCAT( CONCAT('%',#{orderNo}),'%')
        </if>

        <if test="beginTime != null and endTime != null ">
            and created_time >= #{beginTime} <![CDATA[and created_time <= #{endTime} ]]>
        </if>
        order by created_time desc
        limit #{offset} , #{limit}
    </select>

    <select id="queryCountBy" resultType="java.lang.Long" statementType="PREPARED">
        SELECT count(1)
        FROM t_handle_delay where
        merchant_id = #{merchantId} and status = 1
        <if test="orderNo != null and orderNo != '' ">
            and order_no like CONCAT( CONCAT('%',#{orderNo}),'%')
        </if>
        <if test="beginTime != null and endTime != null ">
            and created_time >= #{beginTime} <![CDATA[and created_time <= #{endTime} ]]>
        </if>
        order by null
    </select>
</mapper>