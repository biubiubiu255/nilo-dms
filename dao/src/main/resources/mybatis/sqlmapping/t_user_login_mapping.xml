<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nilo.dms.dao.UserLoginDao">

    <!-- 实体bean与数据字段对应关系 -->
    <resultMap id="userDO" type="com.nilo.dms.dao.dataobject.UserLoginDO">
        <result property="merchantId" column="merchant_id" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="id" column="id" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="userId" column="user_id" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="userName" column="user_name" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" javaType="java.lang.Integer"
                jdbcType="INTEGER"/>
        <result property="status" column="status" javaType="java.lang.Integer"
                jdbcType="INTEGER"/>
        <result property="createdTime" column="created_time" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="updatedTime" column="updated_time" javaType="java.lang.Long"
                jdbcType="INTEGER"/>
        <result property="version" column="version" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, merchant_id ,user_id ,user_name, password ,  user_type, status, created_time , updated_time ,version
    </sql>

    <!-- 插入语句 -->
    <insert id="insert" parameterType="com.nilo.dms.dao.dataobject.UserLoginDO" statementType="PREPARED"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO t_sys_user_login
        (merchant_id,user_id, user_name, password, user_type, status, created_time, updated_time,version)
        VALUES
        (#{merchantId},#{userId}, #{userName}, #{password}, #{userType},#{status}, UNIX_TIMESTAMP(NOW()),UNIX_TIMESTAMP(NOW()),UUID())
    </insert>

    <!-- 动态更新语句 -->
    <update id="update" parameterType="com.nilo.dms.dao.dataobject.UserLoginDO" statementType="PREPARED">
        update t_sys_user_login
        <trim prefix="set" suffixOverrides="," suffix="where merchant_Id=#{merchantId} and user_id=#{userId}">
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="userType != null and userType != ''">
                user_type = #{userType},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            updated_time=UNIX_TIMESTAMP(NOW()),version=UUID()
        </trim>
    </update>

    <!-- 查询所有用户信息 -->
    <select id="findAll" resultMap="userDO" statementType="PREPARED">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user_login
    </select>

    <select id="findByUserId" resultMap="userDO" statementType="PREPARED"
            parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user_login
        WHERE user_id=#{userId}
    </select>

    <select id="findByUserIds" resultMap="userDO" statementType="PREPARED"
            parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user_login
        WHERE merchant_id=#{merchantId}
        <if test="userIds !=null and userIds.size() > 0">
            and user_id in
            <foreach collection="userIds" item="userId" index="index"
                     open="(" close=")" separator=",">
                #{userId}
            </foreach>
        </if>
    </select>
    <select id="findByUserName" resultMap="userDO" statementType="PREPARED"
            parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user_login
        WHERE user_name=#{username} LIMIT 1
    </select>

    <select id="findBy" resultMap="userDO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_sys_user_login
        WHERE merchant_id=#{merchantId}
        <if test="userName !=null and userName !='' ">
            and user_name like CONCAT( CONCAT('%',#{userName}),'%')
        </if>
        order by created_time desc
        limit #{offset} , #{limit}
    </select>
    <select id="findCountBy" resultType="java.lang.Long">
        SELECT count(1)
        FROM t_sys_user_login
        WHERE merchant_id=#{merchantId}
        <if test="userName !=null and userName !='' ">
            and user_name like CONCAT( CONCAT('%',#{userName}),'%')
        </if>
        order by null

    </select>


</mapper>